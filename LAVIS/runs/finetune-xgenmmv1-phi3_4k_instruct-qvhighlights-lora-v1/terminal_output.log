/usr/local/lib/python3.10/dist-packages/debugpy/_vendored/force_pydevd.py:18: UserWarning: incompatible copy of pydevd already imported:
 /usr/local/lib/python3.10/dist-packages/pydevd_plugins/__init__.py
  /usr/local/lib/python3.10/dist-packages/pydevd_plugins/extensions/__init__.py
  /usr/local/lib/python3.10/dist-packages/pydevd_plugins/extensions/pydevd_plugin_omegaconf.py
  warnings.warn(msg + ':\n {}'.format('\n  '.join(_unvendored)))
================== Parsed Arguments ===================
anyres_grids: [(1, 2), (2, 1), (2, 2), (3, 1), (1, 3)]
anyres_patch_sampling: True
batch_size: 1
checkpoint_steps: 500
conv_template_name: phi_3
cpu_offload_gradients: False
cross_attn_every_n_layers: 1
data_path: qvhighlights
data_sampler_group_by_length: True
delete_previous_checkpoint: False
dist_backend: nccl
dist_url: env://
dryrun: False
fsdp: False
fsdp_sharding_strategy: full
gradient_accumulation_steps: 8
gradient_checkpointing: True
horovod: False
image_aspect_ratio: anyres
is_multimodal: True
learning_rate: 2e-05
lm_path: microsoft/Phi-3-mini-4k-instruct
local_rank: 0
logging_steps: 50
lora: False
loss: supervised_finetune
lr_scheduler: cosine
mm_use_im_start_end: False
model_family: xgenmm_v1
no_save_optim_state: True
no_set_device_rank: False
num_epochs: 1
num_vision_tokens: 128
offline: False
precision: amp_bf16
pretrained: /workspace/moment-retrieval-with-llm/base_model_weight/xgen-mm-phi3-mini-base-r-v1.5.pt
pretrained_vision_tokenizer: None
report_to_wandb: False
resume_from_checkpoint: None
run_name: finetune-xgenmmv1-phi3_4k_instruct-qvhighlights-lora-v1
save_checkpoints_to_wandb: False
seed: 42
tokenizer_path: microsoft/Phi-3-mini-4k-instruct
unfreeze_vision_encoder: False
use_flash_attention_2: True
vision_encoder_path: google/siglip-so400m-patch14-384
vision_encoder_precision: fp32
vision_encoder_pretrained: google
wandb_entity: None
wandb_project: None
warmup_steps: 2000
weight_decay: 0.0
workers: 2
=======================================================
Initializing distributed training with 1 GPUs.
Using a slow image processor as `use_fast` is unset and a slow processor was saved with this model. `use_fast=True` will be the default behavior in v4.52, even if the model was saved with a slow processor. This will result in minor differences in outputs. You'll still be able to use a slow processor with `use_fast=False`.
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.27s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:06<00:00,  3.86s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:06<00:00,  3.47s/it]
xgenmm_v1 model initialized with 3,931,031,619 trainable parameters
==========Trainable Parameters
Vision encoder: 0 trainable parameters
Vision tokenizer: 109,901,568 trainable parameters
Language model: 3,821,130,051 trainable parameters
==========Total Parameters
Vision encoder: 428,225,600 parameters
Vision tokenizer: 109,901,568 parameters
Language model: 3,821,130,051 parameters
==========
Loading checkpoint from /workspace/moment-retrieval-with-llm/base_model_weight/xgen-mm-phi3-mini-base-r-v1.5.pt
Missing keys: []
Unexpected keys: []
Finished loading checkpoint...
Wrapping model in LoRA
================== Data mixture config ===================
qvhighlights
{
    "train": {
        "annotations": {
            "../datasets/qvhighlights/annotations/processed/highlight_train_release.json": 1000
        },
        "videos": "../datasets/qvhighlights/videos/processed"
    },
    "val": {
        "annotations": {
            "../datasets/qvhighlights/annotations/processed/highlight_val_release.json": 200
        },
        "videos": "../datasets/qvhighlights/videos/processed"
    }
}
==========================================================
